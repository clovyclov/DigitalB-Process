//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalBProcess.qadigitalb360.eview360.net {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    using System.Data;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="web_serviceSoap", Namespace="http://tempuri.org/")]
    public partial class web_service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Update_Device_InfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRemaininglicensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalLicensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIsForceWindowsUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWindowsUpdateStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOSDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback check_lidOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Is_ActivationCodeInUseOperationCompleted;
        
        private System.Threading.SendOrPostCallback OverrideActivationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback set_lidOperationCompleted;
        
        private System.Threading.SendOrPostCallback download_completeOperationCompleted;
        
        private System.Threading.SendOrPostCallback download_complete_NO_BandwidthUsageOperationCompleted;
        
        private System.Threading.SendOrPostCallback get_xmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentAppVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentAppDownloadLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstallerLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateModifiedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpirationDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDateModifiedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDeviceTimeZoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogAzureRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogAppRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocalContents_Gen2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleDayOperationCompleted;
        
        /// CodeRemarks
        public web_service() {
            this.Url = "http://qadigitalb360.eview360.net/portal/web_service.asmx";
        }
        
        public web_service(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event Update_Device_InfoCompletedEventHandler Update_Device_InfoCompleted;
        
        /// CodeRemarks
        public event GetRemaininglicensesCompletedEventHandler GetRemaininglicensesCompleted;
        
        /// CodeRemarks
        public event GetTotalLicensesCompletedEventHandler GetTotalLicensesCompleted;
        
        /// CodeRemarks
        public event GetIsForceWindowsUpdateCompletedEventHandler GetIsForceWindowsUpdateCompleted;
        
        /// CodeRemarks
        public event GetWindowsUpdateStatusCompletedEventHandler GetWindowsUpdateStatusCompleted;
        
        /// CodeRemarks
        public event SetOSDetailsCompletedEventHandler SetOSDetailsCompleted;
        
        /// CodeRemarks
        public event check_lidCompletedEventHandler check_lidCompleted;
        
        /// CodeRemarks
        public event UpdateVersionCompletedEventHandler UpdateVersionCompleted;
        
        /// CodeRemarks
        public event Is_ActivationCodeInUseCompletedEventHandler Is_ActivationCodeInUseCompleted;
        
        /// CodeRemarks
        public event OverrideActivationCodeCompletedEventHandler OverrideActivationCodeCompleted;
        
        /// CodeRemarks
        public event set_lidCompletedEventHandler set_lidCompleted;
        
        /// CodeRemarks
        public event download_completeCompletedEventHandler download_completeCompleted;
        
        /// CodeRemarks
        public event download_complete_NO_BandwidthUsageCompletedEventHandler download_complete_NO_BandwidthUsageCompleted;
        
        /// CodeRemarks
        public event get_xmlCompletedEventHandler get_xmlCompleted;
        
        /// CodeRemarks
        public event GetCurrentAppVersionCompletedEventHandler GetCurrentAppVersionCompleted;
        
        /// CodeRemarks
        public event GetCurrentAppDownloadLinkCompletedEventHandler GetCurrentAppDownloadLinkCompleted;
        
        /// CodeRemarks
        public event GetInstallerLinkCompletedEventHandler GetInstallerLinkCompleted;
        
        /// CodeRemarks
        public event GetDateModifiedCompletedEventHandler GetDateModifiedCompleted;
        
        /// CodeRemarks
        public event GetDeviceNameCompletedEventHandler GetDeviceNameCompleted;
        
        /// CodeRemarks
        public event GetExpirationDateCompletedEventHandler GetExpirationDateCompleted;
        
        /// CodeRemarks
        public event UpdateDateModifiedCompletedEventHandler UpdateDateModifiedCompleted;
        
        /// CodeRemarks
        public event UpdateDeviceTimeZoneCompletedEventHandler UpdateDeviceTimeZoneCompleted;
        
        /// CodeRemarks
        public event GetContactInfoCompletedEventHandler GetContactInfoCompleted;
        
        /// CodeRemarks
        public event LogAzureRequestCompletedEventHandler LogAzureRequestCompleted;
        
        /// CodeRemarks
        public event LogAppRequestCompletedEventHandler LogAppRequestCompleted;
        
        /// CodeRemarks
        public event GetLocalContents_Gen2CompletedEventHandler GetLocalContents_Gen2Completed;
        
        /// CodeRemarks
        public event GetDefaultContentCompletedEventHandler GetDefaultContentCompleted;
        
        /// CodeRemarks
        public event GetScheduleDayCompletedEventHandler GetScheduleDayCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_Device_Info", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Device_Info(string aid, string lid, string MachineID, string TeamViewerID) {
            this.Invoke("Update_Device_Info", new object[] {
                        aid,
                        lid,
                        MachineID,
                        TeamViewerID});
        }
        
        /// CodeRemarks
        public void Update_Device_InfoAsync(string aid, string lid, string MachineID, string TeamViewerID) {
            this.Update_Device_InfoAsync(aid, lid, MachineID, TeamViewerID, null);
        }
        
        /// CodeRemarks
        public void Update_Device_InfoAsync(string aid, string lid, string MachineID, string TeamViewerID, object userState) {
            if ((this.Update_Device_InfoOperationCompleted == null)) {
                this.Update_Device_InfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Device_InfoOperationCompleted);
            }
            this.InvokeAsync("Update_Device_Info", new object[] {
                        aid,
                        lid,
                        MachineID,
                        TeamViewerID}, this.Update_Device_InfoOperationCompleted, userState);
        }
        
        private void OnUpdate_Device_InfoOperationCompleted(object arg) {
            if ((this.Update_Device_InfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Device_InfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRemaininglicenses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetRemaininglicenses(string aid) {
            object[] results = this.Invoke("GetRemaininglicenses", new object[] {
                        aid});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void GetRemaininglicensesAsync(string aid) {
            this.GetRemaininglicensesAsync(aid, null);
        }
        
        /// CodeRemarks
        public void GetRemaininglicensesAsync(string aid, object userState) {
            if ((this.GetRemaininglicensesOperationCompleted == null)) {
                this.GetRemaininglicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRemaininglicensesOperationCompleted);
            }
            this.InvokeAsync("GetRemaininglicenses", new object[] {
                        aid}, this.GetRemaininglicensesOperationCompleted, userState);
        }
        
        private void OnGetRemaininglicensesOperationCompleted(object arg) {
            if ((this.GetRemaininglicensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRemaininglicensesCompleted(this, new GetRemaininglicensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTotalLicenses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTotalLicenses(string aid) {
            object[] results = this.Invoke("GetTotalLicenses", new object[] {
                        aid});
            return ((int)(results[0]));
        }
        
        /// CodeRemarks
        public void GetTotalLicensesAsync(string aid) {
            this.GetTotalLicensesAsync(aid, null);
        }
        
        /// CodeRemarks
        public void GetTotalLicensesAsync(string aid, object userState) {
            if ((this.GetTotalLicensesOperationCompleted == null)) {
                this.GetTotalLicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalLicensesOperationCompleted);
            }
            this.InvokeAsync("GetTotalLicenses", new object[] {
                        aid}, this.GetTotalLicensesOperationCompleted, userState);
        }
        
        private void OnGetTotalLicensesOperationCompleted(object arg) {
            if ((this.GetTotalLicensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalLicensesCompleted(this, new GetTotalLicensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIsForceWindowsUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetIsForceWindowsUpdate(string aid) {
            object[] results = this.Invoke("GetIsForceWindowsUpdate", new object[] {
                        aid});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void GetIsForceWindowsUpdateAsync(string aid) {
            this.GetIsForceWindowsUpdateAsync(aid, null);
        }
        
        /// CodeRemarks
        public void GetIsForceWindowsUpdateAsync(string aid, object userState) {
            if ((this.GetIsForceWindowsUpdateOperationCompleted == null)) {
                this.GetIsForceWindowsUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsForceWindowsUpdateOperationCompleted);
            }
            this.InvokeAsync("GetIsForceWindowsUpdate", new object[] {
                        aid}, this.GetIsForceWindowsUpdateOperationCompleted, userState);
        }
        
        private void OnGetIsForceWindowsUpdateOperationCompleted(object arg) {
            if ((this.GetIsForceWindowsUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIsForceWindowsUpdateCompleted(this, new GetIsForceWindowsUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWindowsUpdateStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetWindowsUpdateStatus(string aid) {
            object[] results = this.Invoke("GetWindowsUpdateStatus", new object[] {
                        aid});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void GetWindowsUpdateStatusAsync(string aid) {
            this.GetWindowsUpdateStatusAsync(aid, null);
        }
        
        /// CodeRemarks
        public void GetWindowsUpdateStatusAsync(string aid, object userState) {
            if ((this.GetWindowsUpdateStatusOperationCompleted == null)) {
                this.GetWindowsUpdateStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWindowsUpdateStatusOperationCompleted);
            }
            this.InvokeAsync("GetWindowsUpdateStatus", new object[] {
                        aid}, this.GetWindowsUpdateStatusOperationCompleted, userState);
        }
        
        private void OnGetWindowsUpdateStatusOperationCompleted(object arg) {
            if ((this.GetWindowsUpdateStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWindowsUpdateStatusCompleted(this, new GetWindowsUpdateStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetOSDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetOSDetails(string aid, string OSFullName, string OSMinorVersion, string FreeSpaceMB) {
            object[] results = this.Invoke("SetOSDetails", new object[] {
                        aid,
                        OSFullName,
                        OSMinorVersion,
                        FreeSpaceMB});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void SetOSDetailsAsync(string aid, string OSFullName, string OSMinorVersion, string FreeSpaceMB) {
            this.SetOSDetailsAsync(aid, OSFullName, OSMinorVersion, FreeSpaceMB, null);
        }
        
        /// CodeRemarks
        public void SetOSDetailsAsync(string aid, string OSFullName, string OSMinorVersion, string FreeSpaceMB, object userState) {
            if ((this.SetOSDetailsOperationCompleted == null)) {
                this.SetOSDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOSDetailsOperationCompleted);
            }
            this.InvokeAsync("SetOSDetails", new object[] {
                        aid,
                        OSFullName,
                        OSMinorVersion,
                        FreeSpaceMB}, this.SetOSDetailsOperationCompleted, userState);
        }
        
        private void OnSetOSDetailsOperationCompleted(object arg) {
            if ((this.SetOSDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOSDetailsCompleted(this, new SetOSDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/check_lid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool check_lid(string aid, string lid) {
            object[] results = this.Invoke("check_lid", new object[] {
                        aid,
                        lid});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void check_lidAsync(string aid, string lid) {
            this.check_lidAsync(aid, lid, null);
        }
        
        /// CodeRemarks
        public void check_lidAsync(string aid, string lid, object userState) {
            if ((this.check_lidOperationCompleted == null)) {
                this.check_lidOperationCompleted = new System.Threading.SendOrPostCallback(this.Oncheck_lidOperationCompleted);
            }
            this.InvokeAsync("check_lid", new object[] {
                        aid,
                        lid}, this.check_lidOperationCompleted, userState);
        }
        
        private void Oncheck_lidOperationCompleted(object arg) {
            if ((this.check_lidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.check_lidCompleted(this, new check_lidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateVersion(string aid, string Version) {
            object[] results = this.Invoke("UpdateVersion", new object[] {
                        aid,
                        Version});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void UpdateVersionAsync(string aid, string Version) {
            this.UpdateVersionAsync(aid, Version, null);
        }
        
        /// CodeRemarks
        public void UpdateVersionAsync(string aid, string Version, object userState) {
            if ((this.UpdateVersionOperationCompleted == null)) {
                this.UpdateVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateVersionOperationCompleted);
            }
            this.InvokeAsync("UpdateVersion", new object[] {
                        aid,
                        Version}, this.UpdateVersionOperationCompleted, userState);
        }
        
        private void OnUpdateVersionOperationCompleted(object arg) {
            if ((this.UpdateVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateVersionCompleted(this, new UpdateVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Is_ActivationCodeInUse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Is_ActivationCodeInUse(string aid) {
            object[] results = this.Invoke("Is_ActivationCodeInUse", new object[] {
                        aid});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void Is_ActivationCodeInUseAsync(string aid) {
            this.Is_ActivationCodeInUseAsync(aid, null);
        }
        
        /// CodeRemarks
        public void Is_ActivationCodeInUseAsync(string aid, object userState) {
            if ((this.Is_ActivationCodeInUseOperationCompleted == null)) {
                this.Is_ActivationCodeInUseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIs_ActivationCodeInUseOperationCompleted);
            }
            this.InvokeAsync("Is_ActivationCodeInUse", new object[] {
                        aid}, this.Is_ActivationCodeInUseOperationCompleted, userState);
        }
        
        private void OnIs_ActivationCodeInUseOperationCompleted(object arg) {
            if ((this.Is_ActivationCodeInUseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Is_ActivationCodeInUseCompleted(this, new Is_ActivationCodeInUseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OverrideActivationCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OverrideActivationCode(string aid) {
            object[] results = this.Invoke("OverrideActivationCode", new object[] {
                        aid});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void OverrideActivationCodeAsync(string aid) {
            this.OverrideActivationCodeAsync(aid, null);
        }
        
        /// CodeRemarks
        public void OverrideActivationCodeAsync(string aid, object userState) {
            if ((this.OverrideActivationCodeOperationCompleted == null)) {
                this.OverrideActivationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOverrideActivationCodeOperationCompleted);
            }
            this.InvokeAsync("OverrideActivationCode", new object[] {
                        aid}, this.OverrideActivationCodeOperationCompleted, userState);
        }
        
        private void OnOverrideActivationCodeOperationCompleted(object arg) {
            if ((this.OverrideActivationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OverrideActivationCodeCompleted(this, new OverrideActivationCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/set_lid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool set_lid(string aid, string lid) {
            object[] results = this.Invoke("set_lid", new object[] {
                        aid,
                        lid});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void set_lidAsync(string aid, string lid) {
            this.set_lidAsync(aid, lid, null);
        }
        
        /// CodeRemarks
        public void set_lidAsync(string aid, string lid, object userState) {
            if ((this.set_lidOperationCompleted == null)) {
                this.set_lidOperationCompleted = new System.Threading.SendOrPostCallback(this.Onset_lidOperationCompleted);
            }
            this.InvokeAsync("set_lid", new object[] {
                        aid,
                        lid}, this.set_lidOperationCompleted, userState);
        }
        
        private void Onset_lidOperationCompleted(object arg) {
            if ((this.set_lidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.set_lidCompleted(this, new set_lidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/download_complete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool download_complete(string aid, string lid, string thetype, string theid, string filename, string filesize) {
            object[] results = this.Invoke("download_complete", new object[] {
                        aid,
                        lid,
                        thetype,
                        theid,
                        filename,
                        filesize});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void download_completeAsync(string aid, string lid, string thetype, string theid, string filename, string filesize) {
            this.download_completeAsync(aid, lid, thetype, theid, filename, filesize, null);
        }
        
        /// CodeRemarks
        public void download_completeAsync(string aid, string lid, string thetype, string theid, string filename, string filesize, object userState) {
            if ((this.download_completeOperationCompleted == null)) {
                this.download_completeOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondownload_completeOperationCompleted);
            }
            this.InvokeAsync("download_complete", new object[] {
                        aid,
                        lid,
                        thetype,
                        theid,
                        filename,
                        filesize}, this.download_completeOperationCompleted, userState);
        }
        
        private void Ondownload_completeOperationCompleted(object arg) {
            if ((this.download_completeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.download_completeCompleted(this, new download_completeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/download_complete_NO_BandwidthUsage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool download_complete_NO_BandwidthUsage(string aid, string lid, string thetype, string theid, string filename, string filesize) {
            object[] results = this.Invoke("download_complete_NO_BandwidthUsage", new object[] {
                        aid,
                        lid,
                        thetype,
                        theid,
                        filename,
                        filesize});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void download_complete_NO_BandwidthUsageAsync(string aid, string lid, string thetype, string theid, string filename, string filesize) {
            this.download_complete_NO_BandwidthUsageAsync(aid, lid, thetype, theid, filename, filesize, null);
        }
        
        /// CodeRemarks
        public void download_complete_NO_BandwidthUsageAsync(string aid, string lid, string thetype, string theid, string filename, string filesize, object userState) {
            if ((this.download_complete_NO_BandwidthUsageOperationCompleted == null)) {
                this.download_complete_NO_BandwidthUsageOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondownload_complete_NO_BandwidthUsageOperationCompleted);
            }
            this.InvokeAsync("download_complete_NO_BandwidthUsage", new object[] {
                        aid,
                        lid,
                        thetype,
                        theid,
                        filename,
                        filesize}, this.download_complete_NO_BandwidthUsageOperationCompleted, userState);
        }
        
        private void Ondownload_complete_NO_BandwidthUsageOperationCompleted(object arg) {
            if ((this.download_complete_NO_BandwidthUsageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.download_complete_NO_BandwidthUsageCompleted(this, new download_complete_NO_BandwidthUsageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/get_xml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet get_xml(string aid, string serialnum) {
            object[] results = this.Invoke("get_xml", new object[] {
                        aid,
                        serialnum});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// CodeRemarks
        public void get_xmlAsync(string aid, string serialnum) {
            this.get_xmlAsync(aid, serialnum, null);
        }
        
        /// CodeRemarks
        public void get_xmlAsync(string aid, string serialnum, object userState) {
            if ((this.get_xmlOperationCompleted == null)) {
                this.get_xmlOperationCompleted = new System.Threading.SendOrPostCallback(this.Onget_xmlOperationCompleted);
            }
            this.InvokeAsync("get_xml", new object[] {
                        aid,
                        serialnum}, this.get_xmlOperationCompleted, userState);
        }
        
        private void Onget_xmlOperationCompleted(object arg) {
            if ((this.get_xmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.get_xmlCompleted(this, new get_xmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentAppVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentAppVersion(string serialnum) {
            object[] results = this.Invoke("GetCurrentAppVersion", new object[] {
                        serialnum});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetCurrentAppVersionAsync(string serialnum) {
            this.GetCurrentAppVersionAsync(serialnum, null);
        }
        
        /// CodeRemarks
        public void GetCurrentAppVersionAsync(string serialnum, object userState) {
            if ((this.GetCurrentAppVersionOperationCompleted == null)) {
                this.GetCurrentAppVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentAppVersionOperationCompleted);
            }
            this.InvokeAsync("GetCurrentAppVersion", new object[] {
                        serialnum}, this.GetCurrentAppVersionOperationCompleted, userState);
        }
        
        private void OnGetCurrentAppVersionOperationCompleted(object arg) {
            if ((this.GetCurrentAppVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentAppVersionCompleted(this, new GetCurrentAppVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentAppDownloadLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentAppDownloadLink(string serialnum) {
            object[] results = this.Invoke("GetCurrentAppDownloadLink", new object[] {
                        serialnum});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetCurrentAppDownloadLinkAsync(string serialnum) {
            this.GetCurrentAppDownloadLinkAsync(serialnum, null);
        }
        
        /// CodeRemarks
        public void GetCurrentAppDownloadLinkAsync(string serialnum, object userState) {
            if ((this.GetCurrentAppDownloadLinkOperationCompleted == null)) {
                this.GetCurrentAppDownloadLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentAppDownloadLinkOperationCompleted);
            }
            this.InvokeAsync("GetCurrentAppDownloadLink", new object[] {
                        serialnum}, this.GetCurrentAppDownloadLinkOperationCompleted, userState);
        }
        
        private void OnGetCurrentAppDownloadLinkOperationCompleted(object arg) {
            if ((this.GetCurrentAppDownloadLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentAppDownloadLinkCompleted(this, new GetCurrentAppDownloadLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInstallerLink", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInstallerLink(string serialnum) {
            object[] results = this.Invoke("GetInstallerLink", new object[] {
                        serialnum});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetInstallerLinkAsync(string serialnum) {
            this.GetInstallerLinkAsync(serialnum, null);
        }
        
        /// CodeRemarks
        public void GetInstallerLinkAsync(string serialnum, object userState) {
            if ((this.GetInstallerLinkOperationCompleted == null)) {
                this.GetInstallerLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstallerLinkOperationCompleted);
            }
            this.InvokeAsync("GetInstallerLink", new object[] {
                        serialnum}, this.GetInstallerLinkOperationCompleted, userState);
        }
        
        private void OnGetInstallerLinkOperationCompleted(object arg) {
            if ((this.GetInstallerLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstallerLinkCompleted(this, new GetInstallerLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDateModified", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDateModified(string aid) {
            object[] results = this.Invoke("GetDateModified", new object[] {
                        aid});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetDateModifiedAsync(string aid) {
            this.GetDateModifiedAsync(aid, null);
        }
        
        /// CodeRemarks
        public void GetDateModifiedAsync(string aid, object userState) {
            if ((this.GetDateModifiedOperationCompleted == null)) {
                this.GetDateModifiedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateModifiedOperationCompleted);
            }
            this.InvokeAsync("GetDateModified", new object[] {
                        aid}, this.GetDateModifiedOperationCompleted, userState);
        }
        
        private void OnGetDateModifiedOperationCompleted(object arg) {
            if ((this.GetDateModifiedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateModifiedCompleted(this, new GetDateModifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeviceName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeviceName(string aid) {
            object[] results = this.Invoke("GetDeviceName", new object[] {
                        aid});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetDeviceNameAsync(string aid) {
            this.GetDeviceNameAsync(aid, null);
        }
        
        /// CodeRemarks
        public void GetDeviceNameAsync(string aid, object userState) {
            if ((this.GetDeviceNameOperationCompleted == null)) {
                this.GetDeviceNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceNameOperationCompleted);
            }
            this.InvokeAsync("GetDeviceName", new object[] {
                        aid}, this.GetDeviceNameOperationCompleted, userState);
        }
        
        private void OnGetDeviceNameOperationCompleted(object arg) {
            if ((this.GetDeviceNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceNameCompleted(this, new GetDeviceNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpirationDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExpirationDate(string aid) {
            object[] results = this.Invoke("GetExpirationDate", new object[] {
                        aid});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetExpirationDateAsync(string aid) {
            this.GetExpirationDateAsync(aid, null);
        }
        
        /// CodeRemarks
        public void GetExpirationDateAsync(string aid, object userState) {
            if ((this.GetExpirationDateOperationCompleted == null)) {
                this.GetExpirationDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpirationDateOperationCompleted);
            }
            this.InvokeAsync("GetExpirationDate", new object[] {
                        aid}, this.GetExpirationDateOperationCompleted, userState);
        }
        
        private void OnGetExpirationDateOperationCompleted(object arg) {
            if ((this.GetExpirationDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpirationDateCompleted(this, new GetExpirationDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDateModified", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDateModified(string aid, string datemodified) {
            object[] results = this.Invoke("UpdateDateModified", new object[] {
                        aid,
                        datemodified});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void UpdateDateModifiedAsync(string aid, string datemodified) {
            this.UpdateDateModifiedAsync(aid, datemodified, null);
        }
        
        /// CodeRemarks
        public void UpdateDateModifiedAsync(string aid, string datemodified, object userState) {
            if ((this.UpdateDateModifiedOperationCompleted == null)) {
                this.UpdateDateModifiedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDateModifiedOperationCompleted);
            }
            this.InvokeAsync("UpdateDateModified", new object[] {
                        aid,
                        datemodified}, this.UpdateDateModifiedOperationCompleted, userState);
        }
        
        private void OnUpdateDateModifiedOperationCompleted(object arg) {
            if ((this.UpdateDateModifiedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDateModifiedCompleted(this, new UpdateDateModifiedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDeviceTimeZone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDeviceTimeZone(string aid, string timezone) {
            object[] results = this.Invoke("UpdateDeviceTimeZone", new object[] {
                        aid,
                        timezone});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void UpdateDeviceTimeZoneAsync(string aid, string timezone) {
            this.UpdateDeviceTimeZoneAsync(aid, timezone, null);
        }
        
        /// CodeRemarks
        public void UpdateDeviceTimeZoneAsync(string aid, string timezone, object userState) {
            if ((this.UpdateDeviceTimeZoneOperationCompleted == null)) {
                this.UpdateDeviceTimeZoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeviceTimeZoneOperationCompleted);
            }
            this.InvokeAsync("UpdateDeviceTimeZone", new object[] {
                        aid,
                        timezone}, this.UpdateDeviceTimeZoneOperationCompleted, userState);
        }
        
        private void OnUpdateDeviceTimeZoneOperationCompleted(object arg) {
            if ((this.UpdateDeviceTimeZoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDeviceTimeZoneCompleted(this, new UpdateDeviceTimeZoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContactInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContactInfo() {
            object[] results = this.Invoke("GetContactInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void GetContactInfoAsync() {
            this.GetContactInfoAsync(null);
        }
        
        /// CodeRemarks
        public void GetContactInfoAsync(object userState) {
            if ((this.GetContactInfoOperationCompleted == null)) {
                this.GetContactInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactInfoOperationCompleted);
            }
            this.InvokeAsync("GetContactInfo", new object[0], this.GetContactInfoOperationCompleted, userState);
        }
        
        private void OnGetContactInfoOperationCompleted(object arg) {
            if ((this.GetContactInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactInfoCompleted(this, new GetContactInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogAzureRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LogAzureRequest(System.Data.DataTable dt) {
            object[] results = this.Invoke("LogAzureRequest", new object[] {
                        dt});
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void LogAzureRequestAsync(System.Data.DataTable dt) {
            this.LogAzureRequestAsync(dt, null);
        }
        
        /// CodeRemarks
        public void LogAzureRequestAsync(System.Data.DataTable dt, object userState) {
            if ((this.LogAzureRequestOperationCompleted == null)) {
                this.LogAzureRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogAzureRequestOperationCompleted);
            }
            this.InvokeAsync("LogAzureRequest", new object[] {
                        dt}, this.LogAzureRequestOperationCompleted, userState);
        }
        
        private void OnLogAzureRequestOperationCompleted(object arg) {
            if ((this.LogAzureRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogAzureRequestCompleted(this, new LogAzureRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogAppRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LogAppRequest(string aid, string TeamviewerId, string IP, string AppVersion, string MacAddress, string Action) {
            object[] results = this.Invoke("LogAppRequest", new object[] {
                        aid,
                        TeamviewerId,
                        IP,
                        AppVersion,
                        MacAddress,
                        Action});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// CodeRemarks
        public void LogAppRequestAsync(string aid, string TeamviewerId, string IP, string AppVersion, string MacAddress, string Action) {
            this.LogAppRequestAsync(aid, TeamviewerId, IP, AppVersion, MacAddress, Action, null);
        }
        
        /// CodeRemarks
        public void LogAppRequestAsync(string aid, string TeamviewerId, string IP, string AppVersion, string MacAddress, string Action, object userState) {
            if ((this.LogAppRequestOperationCompleted == null)) {
                this.LogAppRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogAppRequestOperationCompleted);
            }
            this.InvokeAsync("LogAppRequest", new object[] {
                        aid,
                        TeamviewerId,
                        IP,
                        AppVersion,
                        MacAddress,
                        Action}, this.LogAppRequestOperationCompleted, userState);
        }
        
        private void OnLogAppRequestOperationCompleted(object arg) {
            if ((this.LogAppRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogAppRequestCompleted(this, new LogAppRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocalContents_Gen2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocalContents_Gen2(string aid) {
            object[] results = this.Invoke("GetLocalContents_Gen2", new object[] {
                        aid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// CodeRemarks
        public void GetLocalContents_Gen2Async(string aid) {
            this.GetLocalContents_Gen2Async(aid, null);
        }
        
        /// CodeRemarks
        public void GetLocalContents_Gen2Async(string aid, object userState) {
            if ((this.GetLocalContents_Gen2OperationCompleted == null)) {
                this.GetLocalContents_Gen2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocalContents_Gen2OperationCompleted);
            }
            this.InvokeAsync("GetLocalContents_Gen2", new object[] {
                        aid}, this.GetLocalContents_Gen2OperationCompleted, userState);
        }
        
        private void OnGetLocalContents_Gen2OperationCompleted(object arg) {
            if ((this.GetLocalContents_Gen2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocalContents_Gen2Completed(this, new GetLocalContents_Gen2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefaultContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefaultContent() {
            object[] results = this.Invoke("GetDefaultContent", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// CodeRemarks
        public void GetDefaultContentAsync() {
            this.GetDefaultContentAsync(null);
        }
        
        /// CodeRemarks
        public void GetDefaultContentAsync(object userState) {
            if ((this.GetDefaultContentOperationCompleted == null)) {
                this.GetDefaultContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultContentOperationCompleted);
            }
            this.InvokeAsync("GetDefaultContent", new object[0], this.GetDefaultContentOperationCompleted, userState);
        }
        
        private void OnGetDefaultContentOperationCompleted(object arg) {
            if ((this.GetDefaultContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultContentCompleted(this, new GetDefaultContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetScheduleDay", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetScheduleDay(string aid, System.DateTime time) {
            object[] results = this.Invoke("GetScheduleDay", new object[] {
                        aid,
                        time});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// CodeRemarks
        public void GetScheduleDayAsync(string aid, System.DateTime time) {
            this.GetScheduleDayAsync(aid, time, null);
        }
        
        /// CodeRemarks
        public void GetScheduleDayAsync(string aid, System.DateTime time, object userState) {
            if ((this.GetScheduleDayOperationCompleted == null)) {
                this.GetScheduleDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleDayOperationCompleted);
            }
            this.InvokeAsync("GetScheduleDay", new object[] {
                        aid,
                        time}, this.GetScheduleDayOperationCompleted, userState);
        }
        
        private void OnGetScheduleDayOperationCompleted(object arg) {
            if ((this.GetScheduleDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleDayCompleted(this, new GetScheduleDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void Update_Device_InfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetRemaininglicensesCompletedEventHandler(object sender, GetRemaininglicensesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRemaininglicensesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRemaininglicensesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetTotalLicensesCompletedEventHandler(object sender, GetTotalLicensesCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalLicensesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalLicensesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetIsForceWindowsUpdateCompletedEventHandler(object sender, GetIsForceWindowsUpdateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIsForceWindowsUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIsForceWindowsUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetWindowsUpdateStatusCompletedEventHandler(object sender, GetWindowsUpdateStatusCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWindowsUpdateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWindowsUpdateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void SetOSDetailsCompletedEventHandler(object sender, SetOSDetailsCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOSDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOSDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void check_lidCompletedEventHandler(object sender, check_lidCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class check_lidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal check_lidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void UpdateVersionCompletedEventHandler(object sender, UpdateVersionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void Is_ActivationCodeInUseCompletedEventHandler(object sender, Is_ActivationCodeInUseCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Is_ActivationCodeInUseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Is_ActivationCodeInUseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void OverrideActivationCodeCompletedEventHandler(object sender, OverrideActivationCodeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OverrideActivationCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OverrideActivationCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void set_lidCompletedEventHandler(object sender, set_lidCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class set_lidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal set_lidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void download_completeCompletedEventHandler(object sender, download_completeCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class download_completeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal download_completeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void download_complete_NO_BandwidthUsageCompletedEventHandler(object sender, download_complete_NO_BandwidthUsageCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class download_complete_NO_BandwidthUsageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal download_complete_NO_BandwidthUsageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void get_xmlCompletedEventHandler(object sender, get_xmlCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class get_xmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal get_xmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetCurrentAppVersionCompletedEventHandler(object sender, GetCurrentAppVersionCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentAppVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentAppVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetCurrentAppDownloadLinkCompletedEventHandler(object sender, GetCurrentAppDownloadLinkCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentAppDownloadLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentAppDownloadLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetInstallerLinkCompletedEventHandler(object sender, GetInstallerLinkCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstallerLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstallerLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetDateModifiedCompletedEventHandler(object sender, GetDateModifiedCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateModifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateModifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetDeviceNameCompletedEventHandler(object sender, GetDeviceNameCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetExpirationDateCompletedEventHandler(object sender, GetExpirationDateCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpirationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpirationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void UpdateDateModifiedCompletedEventHandler(object sender, UpdateDateModifiedCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDateModifiedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDateModifiedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void UpdateDeviceTimeZoneCompletedEventHandler(object sender, UpdateDeviceTimeZoneCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDeviceTimeZoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDeviceTimeZoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetContactInfoCompletedEventHandler(object sender, GetContactInfoCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void LogAzureRequestCompletedEventHandler(object sender, LogAzureRequestCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogAzureRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogAzureRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void LogAppRequestCompletedEventHandler(object sender, LogAppRequestCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogAppRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogAppRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetLocalContents_Gen2CompletedEventHandler(object sender, GetLocalContents_Gen2CompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocalContents_Gen2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocalContents_Gen2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetDefaultContentCompletedEventHandler(object sender, GetDefaultContentCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    public delegate void GetScheduleDayCompletedEventHandler(object sender, GetScheduleDayCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "7.5.1.22")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}
